using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace FormForAddingWorkers
{
    public partial class Работники : Form
    {
        int AddOrChange = 1;
        int ind = -1;
        public Работники()
        {
            InitializeComponent();

            dataGridView1.ColumnCount = 4;
            dataGridView1.RowHeadersVisible = false;

            dataGridView1.Columns[0].HeaderText = "ФИО";
            dataGridView1.Columns[1].HeaderText = "Наименование работы";
            dataGridView1.Columns[2].HeaderText = "Выработка";
            dataGridView1.Columns[3].HeaderText = "Расценка";

            dataGridView1.AutoResizeColumns();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (AddOrChange == 1)
            {
                if (FIOTextBox.Text == "" || JobTitleTextBox.Text == "" || ProductionTextBox.Text == "" || PricingTextBox.Text == "")
                    MessageBox.Show("Одна или несколько полей пустые");
                else
                {
                    string FIO = FIOTextBox.Text;//ФИО
                    string JobTitle = JobTitleTextBox.Text;//наименование работы
                    int Production = int.Parse(ProductionTextBox.Text);//выработка
                    int Pricing = int.Parse(PricingTextBox.Text);//расценка
                    Rab.myArr.Add(new Rab.Data(FIO, JobTitle, Production, Pricing));

                    int col = Rab.myArr.Count();
                    dataGridView1.RowCount = col;
                    for (int i = 0; i < col; i++)
                    {
                        dataGridView1.Rows[i].Cells[0].Value = Rab.myArr[i].FIO;
                        dataGridView1.Rows[i].Cells[1].Value = Rab.myArr[i].JobTitle;
                        dataGridView1.Rows[i].Cells[2].Value = Rab.myArr[i].Production;
                        dataGridView1.Rows[i].Cells[3].Value = Rab.myArr[i].Pricing;
                    }

                    AddOrChange = 1;
                    hScrollBar1.Value = 0;
                    hScrollBar2.Value = 0;
                    FIOTextBox.Text = "";
                    JobTitleTextBox.Text = "";
                    ProductionTextBox.Text = "";
                    PricingTextBox.Text = "";
                }
            }
            else
            {
                if (FIOTextBox.Text == "" || JobTitleTextBox.Text == "" || ProductionTextBox.Text == "" || PricingTextBox.Text == "")
                    MessageBox.Show("Одна или несколько полей пустые");
                else
                {
                    string FIO = FIOTextBox.Text;//ФИО
                    string JobTitle = JobTitleTextBox.Text;//наименование работы
                    int Production = int.Parse(ProductionTextBox.Text);//выработка
                    int Pricing = int.Parse(PricingTextBox.Text);//расценка
                    Rab.myArr.RemoveAt(ind);
                    Rab.myArr.Insert(ind, new Rab.Data(FIO, JobTitle, Production, Pricing));

                    int col = Rab.myArr.Count();
                    dataGridView1.RowCount = col;
                    for (int i = 0; i < col; i++)
                    {
                        dataGridView1.Rows[i].Cells[0].Value = Rab.myArr[i].FIO;
                        dataGridView1.Rows[i].Cells[1].Value = Rab.myArr[i].JobTitle;
                        dataGridView1.Rows[i].Cells[2].Value = Rab.myArr[i].Production;
                        dataGridView1.Rows[i].Cells[3].Value = Rab.myArr[i].Pricing;
                    }

                    AddOrChange = 1;
                    hScrollBar1.Value = 0;
                    hScrollBar2.Value = 0;
                    FIOTextBox.Text = "";
                    JobTitleTextBox.Text = "";
                    ProductionTextBox.Text = "";
                    PricingTextBox.Text = "";
                    AddButton.Text = "Добавить";
                }
            }
        }

        private void dataGridView1_CellContentDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex < 0)
                MessageBox.Show("Вы дважды нажали на заголовок");
            else
            {
                AddButton.Text = "Ок";
                AddOrChange = 2;
                ind = dataGridView1.CurrentRow.Index;
                FIOTextBox.Text = Rab.myArr[ind].FIO;
                JobTitleTextBox.Text = Rab.myArr[ind].JobTitle;
                ProductionTextBox.Text = Rab.myArr[ind].Production.ToString();
                PricingTextBox.Text = Rab.myArr[ind].Pricing.ToString();
            }
        }

        private void ProductionTextBox_TextChanged(object sender, EventArgs e)
        {
            if (ProductionTextBox.Text != "")
            {
                bool res = int.TryParse(ProductionTextBox.Text, out int r);
                if (res == false)
                {
                    MessageBox.Show("Вы ввели не число");
                    ProductionTextBox.Text = ProductionTextBox.Text.Substring(0, ProductionTextBox.Text.Length - 1);
                }
                else
                {
                    if (r > 1000)
                        MessageBox.Show("Выработка не может быть больше 1000");
                    while (r > 1000)
                        r = r / 10;
                    hScrollBar1.Value = r;
                    ProductionTextBox.Text = r.ToString();
                }
            }
        }

        private void ReferenceButton_Click(object sender, EventArgs e)
        {
            if (Rab.myArr.Count() == 0)
                MessageBox.Show("Вы не добавили ни одного работника!");
            else
            {
                Справка f = new Справка();
                f.ShowDialog();
            }
        }

        private void hScrollBar1_ValueChanged(object sender, EventArgs e)
        {
            ProductionTextBox.Text = hScrollBar1.Value.ToString();
        }

        private void Работники_Load(object sender, EventArgs e)
        {
            hScrollBar1.Maximum = 1000;
            hScrollBar2.Maximum = 1000;
        }

        private void PricingTextBox_TextChanged(object sender, EventArgs e)
        {
            if (PricingTextBox.Text != "")
            {
                bool res = int.TryParse(PricingTextBox.Text, out int r);
                if (res == false)
                {
                    MessageBox.Show("Вы ввели не число");
                    PricingTextBox.Text = PricingTextBox.Text.Substring(0, PricingTextBox.Text.Length - 1);
                }
                else
                {
                    if (r > 1000)
                        MessageBox.Show("Расценка не может быть больше 1000");
                    while (r > 1000)
                        r = r / 10;
                    hScrollBar2.Value = r;
                    PricingTextBox.Text = r.ToString();
                }
            }
        }

        private void hScrollBar2_ValueChanged(object sender, EventArgs e)
        {
            PricingTextBox.Text = hScrollBar2.Value.ToString();
        }

        private void FIOTextBox_TextChanged(object sender, EventArgs e)
        {
            string A = FIOTextBox.Text;
            for (int i = 0; i < A.Length; i++)
            {
                if (A[i] >= '0' && A[i] <= '9')
                {
                    MessageBox.Show("Вы ввели в ФИО цифру");
                    FIOTextBox.Text = FIOTextBox.Text.Substring(0, FIOTextBox.Text.Length - 1);
                    break;
                }
            }
        }

        private void JobTitleTextBox_TextChanged(object sender, EventArgs e)
        {
            string A = JobTitleTextBox.Text;
            for (int i = 0; i < A.Length; i++)
            {
                if (A[i] >= '0' && A[i] <= '9')
                {
                    MessageBox.Show("Вы ввели в наименование работы цифру");
                    JobTitleTextBox.Text = JobTitleTextBox.Text.Substring(0, JobTitleTextBox.Text.Length - 1);
                    break;
                }
            }
        }
    }
}
